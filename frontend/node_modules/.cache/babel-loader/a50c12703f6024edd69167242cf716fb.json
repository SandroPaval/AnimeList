{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derra\\\\Desktop\\\\animeListe\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AnimeListe from \"./components/AnimeListe\";\nimport { Anime } from \"./components/Anime\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [listenType, setListenType] = useState('Anime');\n  const [animes, setAnimes] = useState([]);\n  const [listenName, setListenName] = useState('Komplette Liste');\n  const [animeId, setAnimeId] = useState('');\n  const [storedFavorite, setStoredFavorite] = useState(false);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  useEffect(() => {\n    fetch(`http://localhost:8080/${listenType}`).then(response => response.json()).then(json => setAnimes(json));\n  }, [listenType]);\n  useEffect(() => {\n    axios.put(`http://localhost:8080/${animeId}/Favorite`).then(response => {\n      console.log(\"Status: \", response.status);\n      console.log(\"Data:\", response.data);\n    });\n  }, [buttonClicked]);\n\n  clickHandler = props => {\n    setAnimeId(props.animeID);\n    setStoredFavorite(!props.favorite);\n    setButtonClicked(!buttonClicked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"completeButton\",\n        onClick: () => {\n          setListenType('Anime');\n          setListenName('Komplette Liste');\n        },\n        children: \"Komplette Liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favoriteButton\",\n        onClick: () => {\n          setListenType('Anime/Favorite');\n          setListenName('Favoriten');\n        },\n        children: \"Favoriten Liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wertungsButton\",\n        onClick: () => {\n          setListenType('Anime/Wertung');\n          setListenName('Top Liste');\n        },\n        children: \"Top Liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"homePageHeader\",\n      children: \"Der Mac Gillis Fanclub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"animeHeader\",\n      children: [listenName, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"animeListe\",\n      children: [animes.map(anime => {\n        return /*#__PURE__*/_jsxDEV(AnimeListe, {\n          anime: anime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favoritus\",\n        onClick: clickHandler(anime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"c0AZAi1XjoEVapno2qa8i2rqT9g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/derra/Desktop/animeListe/frontend/src/App.js"],"names":["React","useEffect","useState","axios","AnimeListe","Anime","App","listenType","setListenType","animes","setAnimes","listenName","setListenName","animeId","setAnimeId","storedFavorite","setStoredFavorite","buttonClicked","setButtonClicked","fetch","then","response","json","put","console","log","status","data","clickHandler","props","animeID","favorite","map","anime"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport AnimeListe from \"./components/AnimeListe\";\r\nimport {Anime} from \"./components/Anime\";\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n    const [listenType, setListenType] = useState('Anime')\r\n    const [animes, setAnimes] = useState([])\r\n    const [listenName, setListenName] = useState('Komplette Liste')\r\n    const [animeId, setAnimeId] = useState('')\r\n    const [storedFavorite, setStoredFavorite] = useState(false)\r\n    const [buttonClicked, setButtonClicked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/${listenType}`)\r\n            .then(response => response.json())\r\n            .then(json => setAnimes(json))\r\n    }, [listenType])\r\n\r\n    useEffect(() => {\r\n        axios.put(`http://localhost:8080/${animeId}/Favorite`)\r\n            .then(response => {\r\n                console.log(\"Status: \", response.status);\r\n                console.log(\"Data:\", response.data);\r\n            });\r\n    },[buttonClicked])\r\n\r\n    clickHandler = (props) => {\r\n        setAnimeId(props.animeID)\r\n        setStoredFavorite(!props.favorite)\r\n        setButtonClicked(!buttonClicked)\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <div>\r\n        <button className=\"completeButton\" onClick={() => {setListenType('Anime'); setListenName('Komplette Liste')}}>Komplette Liste</button>\r\n        <button className=\"favoriteButton\" onClick={() => {setListenType('Anime/Favorite'); setListenName('Favoriten')}}>Favoriten Liste</button>\r\n        <button className=\"wertungsButton\" onClick={() => {setListenType('Anime/Wertung'); setListenName('Top Liste')}}>Top Liste</button>\r\n    </div>\r\n        <h1 className=\"homePageHeader\">Der Mac Gillis Fanclub</h1>\r\n        <h2 className=\"animeHeader\">{listenName}: </h2>\r\n       <p className=\"animeListe\">\r\n           {animes.map(anime => {\r\n           return <AnimeListe anime={anime}></AnimeListe>\r\n        })}\r\n           <button className=\"favoritus\" onClick={clickHandler(anime)}></button>\r\n       </p>\r\n\r\n\r\n    </>\r\n\r\n\r\n)\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}