{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derra\\\\Desktop\\\\animeListe\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AnimeListe from \"./components/AnimeListe\";\nimport './App.css';\nimport './components/SearchBox';\nimport SearchBox from \"./components/SearchBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [listenType, setListenType] = useState('');\n  const [animes, setAnimes] = useState([]);\n  const [listenName, setListenName] = useState('Komplette Liste');\n  const [apiType, setApiType] = useState('http://localhost:8080/Anime');\n  const [searchValue, setSearchValue] = useState('');\n  useEffect(() => {\n    updateList();\n  }, [listenType]);\n\n  function updateList() {\n    fetch(`${apiType}${listenType}`).then(response => response.json()).then(json => setAnimes(json));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"completeButton\",\n        onClick: () => {\n          setListenType('');\n          setApiType('http://localhost:8080/Anime');\n          setListenName('Komplette Liste');\n        },\n        children: \"Komplette Liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favoriteButton\",\n        onClick: () => {\n          setListenType('/Favorite');\n          setApiType('http://localhost:8080/Anime');\n          setListenName('Favoriten');\n        },\n        children: \"Favoriten Liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wertungsButton\",\n        onClick: () => {\n          setListenType('/Wertung');\n          setApiType('http://localhost:8080/Anime');\n          setListenName('Top Liste');\n        },\n        children: \"Top Liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"homePageHeader\",\n      children: \"Der Mac Gillis Fanclub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"animeHeader\",\n      children: [listenName, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"animeListe\",\n      children: animes.map(anime => {\n        return /*#__PURE__*/_jsxDEV(AnimeListe, {\n          anime: anime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"94nQyGI5oG69kYpPAH13sar5X/I=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/derra/Desktop/animeListe/frontend/src/App.js"],"names":["React","useEffect","useState","AnimeListe","SearchBox","App","listenType","setListenType","animes","setAnimes","listenName","setListenName","apiType","setApiType","searchValue","setSearchValue","updateList","fetch","then","response","json","map","anime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAO,wBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,iBAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,6BAAD,CAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAChBe,IAAAA,UAAU;AACT,GAFQ,EAEN,CAACV,UAAD,CAFM,CAAT;;AAMJ,WAASU,UAAT,GAAsB;AAClBC,IAAAA,KAAK,CAAE,GAAEL,OAAQ,GAAEN,UAAW,EAAzB,CAAL,CACKY,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAIX,SAAS,CAACW,IAAD,CAF3B;AAIH;;AAID,sBACI;AAAA,4BACA;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAM;AAACb,UAAAA,aAAa,CAAC,EAAD,CAAb;AAAkBM,UAAAA,UAAU,CAAC,6BAAD,CAAV;AAA2CF,UAAAA,aAAa,CAAC,iBAAD,CAAb;AAAiC,SAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAM;AAACJ,UAAAA,aAAa,CAAC,WAAD,CAAb;AAA4BM,UAAAA,UAAU,CAAC,6BAAD,CAAV;AAA0CF,UAAAA,aAAa,CAAC,WAAD,CAAb;AAA2B,SAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAM;AAACJ,UAAAA,aAAa,CAAC,UAAD,CAAb;AAA2BM,UAAAA,UAAU,CAAC,6BAAD,CAAV;AAA0CF,UAAAA,aAAa,CAAC,WAAD,CAAb;AAA2B,SAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAOI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,iBAA6BD,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASG;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,gBACKF,MAAM,CAACa,GAAP,CAAWC,KAAK,IAAI;AACrB,4BAAO,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACF,OAFG;AADL;AAAA;AAAA;AAAA;AAAA,YATH;AAAA,kBADJ;AAwBC;;GA/CuBjB,G;;KAAAA,G","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport AnimeListe from \"./components/AnimeListe\";\r\nimport './App.css'\r\nimport './components/SearchBox'\r\nimport SearchBox from \"./components/SearchBox\";\r\n\r\nexport default function App() {\r\n    const [listenType, setListenType] = useState('')\r\n    const [animes, setAnimes] = useState([])\r\n    const [listenName, setListenName] = useState('Komplette Liste')\r\n    const [apiType, setApiType] = useState('http://localhost:8080/Anime')\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n    updateList()\r\n    }, [listenType])\r\n\r\n\r\n\r\nfunction updateList() {\r\n    fetch(`${apiType}${listenType}`)\r\n        .then(response => response.json())\r\n        .then(json => setAnimes(json))\r\n\r\n}\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <div>\r\n        <button className=\"completeButton\" onClick={() => {setListenType('');setApiType('http://localhost:8080/Anime'); setListenName('Komplette Liste')}}>Komplette Liste</button>\r\n        <button className=\"favoriteButton\" onClick={() => {setListenType('/Favorite'); setApiType('http://localhost:8080/Anime');setListenName('Favoriten')}}>Favoriten Liste</button>\r\n        <button className=\"wertungsButton\" onClick={() => {setListenType('/Wertung'); setApiType('http://localhost:8080/Anime');setListenName('Top Liste')}}>Top Liste</button>\r\n        <SearchBox></SearchBox>\r\n    </div>\r\n        <h1 className=\"homePageHeader\">Der Mac Gillis Fanclub</h1>\r\n        <h2 className=\"animeHeader\">{listenName}: </h2>\r\n       <p className=\"animeListe\">\r\n           {animes.map(anime => {\r\n           return <AnimeListe anime={anime}></AnimeListe>\r\n        })}\r\n       </p>\r\n\r\n\r\n    </>\r\n\r\n\r\n)\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}