{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derra\\\\Desktop\\\\animeListe\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AnimeListe from \"./components/AnimeListe\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [listenType, setListenType] = useState('Anime');\n  const [animes, setAnimes] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8080/${listenType}`).then(response => response.json()).then(json => setAnimes(json));\n    setQuery('');\n  }, [listenType]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"homePageHeader\",\n        children: \"Der Mac Gillis Fanclub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"buttonGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"searchBar\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"typeButton\",\n            children: \"Anime Suchen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"inputField\",\n            placeholder: \"Titel eingeben...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"typeButton\",\n          onClick: () => {\n            setListenType('Anime');\n          },\n          children: \"Komplette Liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"typeButton\",\n          onClick: () => {\n            setListenType('Anime/Favorite');\n          },\n          children: \"Favoriten Liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"typeButton\",\n          onClick: () => {\n            setListenType('Anime/Wertung');\n          },\n          children: \"Top Liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"animeListe\",\n      children: animes.map(anime => {\n        return /*#__PURE__*/_jsxDEV(AnimeListe, {\n          anime: anime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"R957mq10JBgmmelOSjsm5ZKnhhY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/derra/Desktop/animeListe/frontend/src/App.js"],"names":["React","useEffect","useState","AnimeListe","App","listenType","setListenType","animes","setAnimes","fetch","then","response","json","setQuery","handleSubmit","event","preventDefault","map","anime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,OAAD,CAA5C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAE,yBAAwBJ,UAAW,EAArC,CAAL,CACKK,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAIJ,SAAS,CAACI,IAAD,CAF3B;AAGAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GALQ,EAKN,CAACR,UAAD,CALM,CAAT;;AAUA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,QAAQ,EAAEF,YAAtC;AAAA,kCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,YAA7B;AAA0C,YAAA,WAAW,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAAER,YAAAA,aAAa,CAAC,OAAD,CAAb;AAAwB,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAAEA,YAAAA,aAAa,CAAC,gBAAD,CAAb;AAAiC,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAAEA,YAAAA,aAAa,CAAC,eAAD,CAAb;AAAgC,WAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,gBACKC,MAAM,CAACU,GAAP,CAAWC,KAAK,IAAI;AACjB,4BAAO,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADJ;AAsBH;;GA1CuBd,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AnimeListe from \"./components/AnimeListe\";\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n    const [listenType, setListenType] = useState('Anime')\r\n    const [animes, setAnimes] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/${listenType}`)\r\n            .then(response => response.json())\r\n            .then(json => setAnimes(json))\r\n        setQuery('')\r\n    }, [listenType])\r\n\r\n    \r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pageHeader\">\r\n                <h1 className=\"homePageHeader\">Der Mac Gillis Fanclub</h1>\r\n                <ul className=\"buttonGroup\">\r\n                    <form className=\"searchBar\" onSubmit={handleSubmit}>\r\n                        <button type=\"submit\" className=\"typeButton\">Anime Suchen</button>\r\n                        <input type=\"text\" className=\"inputField\" placeholder=\"Titel eingeben...\" ></input>\r\n                    </form>\r\n                    <button className=\"typeButton\" onClick={() => { setListenType('Anime') }}>Komplette Liste</button>\r\n                    <button className=\"typeButton\" onClick={() => { setListenType('Anime/Favorite') }}>Favoriten Liste</button>\r\n                    <button className=\"typeButton\" onClick={() => { setListenType('Anime/Wertung') }}>Top Liste</button>\r\n                </ul>\r\n\r\n            </div>\r\n            <p className=\"animeListe\">\r\n                {animes.map(anime => {\r\n                    return <AnimeListe anime={anime}></AnimeListe>\r\n                })}\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}